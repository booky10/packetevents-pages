name: Javadoc Deploy

on: [ workflow_dispatch ]

jobs:
  extract-javadoc:

    env:
      TARGET_REPOSITORY: "retrooper/packetevents"
      TARGET_BRANCH_NAME: "2.0"

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Fetch latest workflow run id
        id: fetch_run_id
        run: |
          echo -n 'run_id=' >> "$GITHUB_OUTPUT" && curl -H 'Accept: application/vnd.github+json' "https://api.github.com/repos/${TARGET_REPOSITORY}/actions/runs?exclude_pull_requests=true&branch=$(node -p 'encodeURIComponent(process.env.TARGET_BRANCH_NAME)')&per_page=1" | jq .workflow_runs[0].id >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          repository: "${{ env.TARGET_REPOSITORY }}"
          run-id: "${{ steps.fetch_run_id.outputs.run_id }}"
          github-token: "${{ secrets.ARTIFACT_DOWNLOAD_TOKEN }}"

      - name: Extract Javadoc Jars
        run: |
          ls | xargs -L 1 | awk '/.+-javadoc\.jar/{print $0}' | awk 'BEGIN{FS=OFS="-"}{NF-=3; print}' | awk '!NF || !seen[$0]++' | awk '{cmd="mkdir "$0" && unzip -d ./"$0"/ "$0"-*-javadoc.jar"; print cmd}' | tr '\n' ';' | sh && rm *'.jar'

      - name: Move api javadoc to root directory
        run: mv api/* ./ && rmdir api

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

  deploy-javadoc:
    needs: extract-javadoc

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
